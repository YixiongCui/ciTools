% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_ci_lmer.R
\name{add_ci.lmerMod}
\alias{add_ci.lmerMod}
\title{Confidence Intervals for the Response of Linear Mixed Models}
\usage{
\method{add_ci}{lmerMod}(tb, fit, alpha = 0.05, type = "parametric",
  includeRanef = TRUE, names = NULL, nSims = 200, yhatName = "pred")
}
\arguments{
\item{tb}{A tibble or Data Frame.}

\item{fit}{An object of class \code{lmerMod}.}

\item{alpha}{A real number between 0 and 1. Controls the confidence
level of the interval estimates.}

\item{type}{A string, either \code{"parametric"},
\code{"bootstrap"}, or \code{"sim"}. If \code{type = "sim"},
then \code{add_ci} calls the function \code{predictInterval}
from \code{merTools}. If \code{type = "boot"}, then
\code{add_ci} calls the function \code{bootMer} from
\code{lme4}.}

\item{includeRanef}{A logical. Set whether the predictions and
intervals should be made conditional on the random effects. If
\code{FALSE}, random effects will not be included.}

\item{names}{NULL or character vector of length two. If
\code{NULL}, confidence bounds will automatically be named by
\code{add_ci}, otherwise, the lower confidence bound will be
named \code{names[1]} and the upper confidence bound will be
named \code{names[2]}.}

\item{nSims}{A positive integer. If \code{type = "sim"},
\code{nSims} will determine the number of simulated draws to
make. This controls the number of bootstrap replicates if
\code{type = "boot"}, or the number of simulated draws if
\code{type = "sim"}.}

\item{yhatName}{A string. Name of the predictions vector.}
}
\value{
A tibble, \code{tb}, with predicted values, upper and lower
    confidence bounds attached.
}
\description{
This function is one of the methods for \code{add_ci}, and is
called automatically when \code{add_ci} is used on a \code{fit} of
class \code{lmerMod}. It is recommended that one use parametric
confidence intervals when modeling with a random intercept
LMM. Otherwise confidence intervals may be simulated (type =
\code{"sim"}) via \code{predictInterval} from \code{merTools}. A
bootstrap method may be included in the future.
}
\examples{
\dontrun{
data(sleepstudy) ## included in lme4
tb <- sleepstudy
fit1 <- lmer(Reaction ~ Days + (1 | Subject), data = sleepstudy)
add_ci(tb, fit1)
add_ci(tb, fit1, type = "sim")
}

}
